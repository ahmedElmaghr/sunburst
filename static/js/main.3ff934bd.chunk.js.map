{"version":3,"sources":["View/NodeDto.js","View/View.js","Container/Container.js","App.js","serviceWorker.js","index.js","data/relations_medias_francais.tsv"],"names":["NodeDto","name","node","this","View","props","width","radius","dataTest","constructTree","data","console","log","dataMap","reduce","map","tree","forEach","parent","children","push","treeWrapper","getNodeRoots","parentList","nameList","includes","rootsNamesList","filter","item","roots","rootName","d","root","color2","partition","d3","sum","value","sort","a","b","size","Math","PI","height","color","length","format","state","nextProps","nextContext","tsvTest","then","resp","error","tsv","tst","drawSunburstChart","clicked","arcVisible","labelVisible","labelTransform","x","x0","x1","y","y0","y1","p","datum","each","target","max","min","depth","t","g","transition","duration","path","tween","i","current","getAttribute","attr","attrTween","arc","label","body","divGlobal","append","startAngle","endAngle","padAngle","padRadius","innerRadius","outerRadius","svg","style","selectAll","descendants","slice","join","on","text","ancestors","key","reverse","React","Component","Container","json3","setState","relations_medias_francais","response","relationMediaFr","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"oZAQeA,EAPb,WAAYC,EAAMC,GAAO,oBACvBC,KAAKF,KAAOA,EACZE,KAAKD,KAAOA,GC6SDE,E,YAnSb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KANRC,MAAQ,IAKW,EAHnBC,OAAS,EAAKD,MAAQ,EAGH,EADnBE,SAAW,GACQ,EAmBnBC,cAAgB,SAAAC,GACdC,QAAQC,IAAI,gCACZD,QAAQC,IAAI,aAAcF,GAE1B,IAAIG,EACJA,EAAUH,EAAKI,QAAO,SAASC,EAAKb,GAElC,OADAa,EAAIb,EAAKD,MAAQC,EACVa,IACN,IACHJ,QAAQC,IAAI,0BAA2BC,GAGvC,IAAIG,EAAO,GACXN,EAAKO,SAAQ,SAASf,GAEpB,IAAIgB,EAASL,EAAQX,EAAKgB,QACtBA,GAEDA,EAAOC,WAAaD,EAAOC,SAAW,KAEpCC,KAAKlB,GAGRc,EAAKI,KAAKlB,MAGdS,QAAQC,IAAI,cAAeI,GAC3BL,QAAQC,IAAI,8BAEZ,EAAKJ,SAAW,EAAKa,YAAYL,IAhDhB,EAmDnBM,aAAe,SAAAZ,GACb,IAAKA,EAAM,KAAM,0BACjBC,QAAQC,IAAIF,GACZ,IAAIa,EAAa,GACbC,EAAW,GAEfd,EAAKO,SAAQ,SAAAf,GACPA,EAAKgB,SAAWK,EAAWE,SAASvB,EAAKgB,SAC3CK,EAAWH,KAAKlB,EAAKgB,WAIzBR,EAAKO,SAAQ,SAAAf,GACPA,EAAKD,OAASuB,EAASC,SAASvB,EAAKD,OACvCuB,EAASJ,KAAKlB,EAAKD,SAGvB,IAAIyB,EAAiBH,EAAWI,QAAO,SAAAC,GACrC,OAAQJ,EAASC,SAASG,MAExBC,EAAQ,GAeZ,OAdAlB,QAAQC,IAAI,iBAAkBc,GAC9Bf,QAAQC,IAAI,OAAQF,GACpBgB,EAAeT,SAAQ,SAAAa,GACrB,IAAI5B,EAAOQ,EAAKiB,QAAO,SAAAI,GACrB,OAAOA,EAAE9B,MAAQ6B,KAChB,GAGHnB,QAAQC,IAAI,cAAekB,EAAU,UAAW5B,EAAM,UAAWQ,GACjE,IAAIsB,EAAO,IAAIhC,EAAQ8B,EAAU5B,GACjCS,QAAQC,IAAI,0BAA2BoB,GACvCH,EAAMT,KAAKY,MAEbrB,QAAQC,IAAI,QAASiB,GACdA,GAtFU,EAyFnBR,YAAc,SAAAL,GACZ,MAAO,CAAEf,KAAM,iBAAkBkB,SAAUH,IA1F1B,EA+PnBiB,OAAS,SAAAF,GACP,OAAQA,EAAErB,KAAKT,MACb,IAAK,kBACH,MAAO,OACT,IAAK,QACH,MAAO,MACT,IAAK,cACH,MAAO,SACT,IAAK,MACH,MAAO,OACT,QAAU,MAAO,UAzQF,EA8QnBiC,UAAY,SAAAxB,GACV,IAAIsB,EAAOG,IACE,EAAK3B,UACf4B,KAAI,SAAAL,GAAC,OAAIA,EAAEM,SACXC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEH,MAAQE,EAAEF,SAC1BI,EAAO,CAAC,EAAIC,KAAKC,GAAIX,EAAKY,OAAS,GAEvC,OADgBT,MAAeM,KAAKA,EAApBN,CAA0BH,IApRzB,EAyRnBa,MAAQ,WACNV,IACEA,IAAYA,IAAuB,EAAK9B,MAAMK,KAAKS,SAAS2B,OAAS,KA3RtD,EAgSnBC,OAAS,kBAAMZ,IAAU,OA9RvB,EAAKa,MAAQ,CACXtC,KAAM,IAHS,E,oIAQOuC,EAAWC,M,8HAGjBf,IAAOgB,KAASC,MAAK,SAACC,EAAMC,GAC5C,GAAIA,EAAO,MAAMA,EACjB,OAAOD,M,OAFHE,E,OAIN5C,QAAQC,IAAI,MAAO2C,GACnBpD,KAAKM,cAAc8C,G,gFA+EnBpD,KAAKqD,MAEL,IAAM9C,EAAOP,KAAKE,MAAMK,KAIxB,OAHIA,GACFP,KAAKsD,kBAAkB/C,GAElB,gC,wCAIeA,G,0BAkFbgD,EAgDAC,EAIAC,EAIAC,E,gFAAAA,E,SAAe9B,GACtB,IAAM+B,GAAO/B,EAAEgC,GAAKhC,EAAEiC,IAAM,EAAK,IAAOtB,KAAKC,GACvCsB,GAAMlC,EAAEmC,GAAKnC,EAAEoC,IAAM,EAAK5D,EAIhC,MAHe,iBAAauD,EAAI,GAAjB,uBAAkCG,EAAlC,sBACbH,EAAI,IAAM,EAAI,IADD,MAPRF,E,SAAa7B,GACpB,OAAOA,EAAEoC,IAAM,GAAKpC,EAAEmC,IAAM,IAAMnC,EAAEoC,GAAKpC,EAAEmC,KAAOnC,EAAEiC,GAAKjC,EAAEgC,IAAM,KAL1DJ,E,SAAW5B,GAClB,OAAOA,EAAEoC,IAAM,GAAKpC,EAAEmC,IAAM,GAAKnC,EAAEiC,GAAKjC,EAAEgC,IAjDnCL,E,SAAQU,GACflD,EAAOmD,MAAMD,EAAElD,QAAUc,GAEzBA,EAAKsC,MACH,SAAAvC,GAAC,OACEA,EAAEwC,OAAS,CACVR,GAEE,EADArB,KAAK8B,IAAI,EAAG9B,KAAK+B,IAAI,GAAI1C,EAAEgC,GAAKK,EAAEL,KAAOK,EAAEJ,GAAKI,EAAEL,MAElDrB,KAAKC,GACPqB,GAEE,EADAtB,KAAK8B,IAAI,EAAG9B,KAAK+B,IAAI,GAAI1C,EAAEiC,GAAKI,EAAEL,KAAOK,EAAEJ,GAAKI,EAAEL,MAElDrB,KAAKC,GACPuB,GAAIxB,KAAK8B,IAAI,EAAGzC,EAAEmC,GAAKE,EAAEM,OACzBP,GAAIzB,KAAK8B,IAAI,EAAGzC,EAAEoC,GAAKC,EAAEM,WAI/B,IAAMC,EAAIC,EAAEC,aAAaC,SAAS,KAMlCC,EACGF,WAAWF,GACXK,MAAM,QAAQ,SAAAjD,GACb,IAAMkD,EAAI9C,IAAeJ,EAAEmD,QAASnD,EAAEwC,QACtC,OAAO,SAAAI,GAAC,OAAK5C,EAAEmD,QAAUD,EAAEN,OAE5BhD,QAAO,SAASI,GACf,OAAQ5B,KAAKgF,aAAa,iBAAmBxB,EAAW5B,EAAEwC,WAE3Da,KAAK,gBAAgB,SAAArD,GAAC,OACrB4B,EAAW5B,EAAEwC,QAAWxC,EAAEZ,SAAW,GAAM,GAAO,KAEnDkE,UAAU,KAAK,SAAAtD,GAAC,OAAI,kBAAMuD,EAAIvD,EAAEmD,aAEnCK,EACG5D,QAAO,SAASI,GACf,OAAQ5B,KAAKgF,aAAa,iBAAmBvB,EAAa7B,EAAEwC,WAE7DM,WAAWF,GACXS,KAAK,gBAAgB,SAAArD,GAAC,OAAK6B,EAAa7B,EAAEwC,WAC1Cc,UAAU,aAAa,SAAAtD,GAAC,OAAI,kBAAM8B,EAAe9B,EAAEmD,cA9HlD5E,EAAQH,KAAKG,MACbC,EAASJ,KAAKI,OACdyB,EAAO7B,KAAK+B,UAAUxB,GACxB8E,EAAOrD,IAAU,QACrBH,EAAKsC,MAAK,SAAAvC,GAAC,OAAKA,EAAEmD,QAAUnD,KACxB0D,EAAYD,EAAKE,OAAO,OAEtBJ,EAAMnD,MAETwD,YAAW,SAAA5D,GAAC,OAAIA,EAAEgC,MAClB6B,UAAS,SAAA7D,GAAC,OAAIA,EAAEiC,MAChB6B,UAAS,SAAA9D,GAAC,OAAIW,KAAK+B,KAAK1C,EAAEiC,GAAKjC,EAAEgC,IAAM,EAAG,SAC1C+B,UAAwB,IAAd3F,KAAKI,QACfwF,aAAY,SAAAhE,GAAC,OAAIA,EAAEmC,GAAK,EAAK3D,UAC7ByF,aAAY,SAAAjE,GAAC,OAAIW,KAAK8B,IAAIzC,EAAEmC,GAAK,EAAK3D,OAAQwB,EAAEoC,GAAK,EAAK5D,OAAS,MAEhE0F,EAAMR,EACTC,OAAO,OACPN,KAAK,UAAW,CAAC,EAAG,EAAG,IAAM,MAC7Bc,MAAM,OAAQ,mBAEXtB,EAAIqB,EACPP,OAAO,KACPN,KAAK,YAFE,oBAEwB9E,EAAQ,EAFhC,YAEqCA,EAAQ,EAF7C,OAIJyE,EAAOH,EACVc,OAAO,KACPS,UAAU,QACVzF,KAAKsB,EAAKoE,cAAcC,MAAM,IAC9BC,KAAK,QACLlB,KAAK,QAAQ,SAAArD,GACZ,KAAOA,EAAE2C,MAAQ,GAAG3C,EAAIA,EAAEb,OAC1B,OAAO,EAAKe,OAAOF,MAEpBqD,KAAK,gBAAgB,SAAArD,GAAC,OACrB4B,EAAW5B,EAAEmD,SAAYnD,EAAEZ,SAAW,GAAM,GAAO,KAEpDiE,KAAK,KAAK,SAAArD,GAAC,OAAIuD,EAAIvD,EAAEmD,aAGrBvD,QAAO,SAAAI,GAAC,OAAIA,EAAEZ,YACd+E,MAAM,SAAU,WAChBK,GAAG,QAAS7C,GAEfqB,EAAKW,OAAO,SAASc,MACnB,SAAAzE,GAAC,gBACIA,EACA0E,YACA1F,KAAI,SAAAgB,GAAC,OAAIA,EAAErB,KAAKgG,OAChBC,UACAL,KAAK,KALT,aAKkB,EAAKvD,OAAOhB,EAAEM,WAG7BkD,EAAQX,EACXc,OAAO,KACPN,KAAK,iBAAkB,QACvBA,KAAK,cAAe,UACpBc,MAAM,cAAe,QACrBC,UAAU,QACVzF,KAAKsB,EAAKoE,cAAcC,MAAM,IAC9BC,KAAK,QACLlB,KAAK,KAAM,UACXA,KAAK,gBAAgB,SAAArD,GAAC,OAAK6B,EAAa7B,EAAEmD,YAC1CE,KAAK,aAAa,SAAArD,GAAC,OAAI8B,EAAe9B,EAAEmD,YACxCsB,MAAK,SAAAzE,GAEJ,IAAIwD,EAAQxD,EAAErB,KAAKT,KAInB,OAHIsF,GAASA,EAAMzC,OAAS,KAC1ByC,EAAQA,EAAMc,MAAM,EAAG,IAAM,OAExBd,KAGLrE,EAAS0D,EACZc,OAAO,UACPrB,MAAMrC,GACNoD,KAAK,IAAK7E,GACV6E,KAAK,OAAQ,QACbA,KAAK,iBAAkB,OACvBmB,GAAG,QAAS7C,G,kBAmERuC,EAAI/F,Q,uDAnQI0G,IAAMC,W,QC2CVC,G,kNA1Cb9D,MAAQ,G,mFACa,IAAD,OAGd+D,GACF5G,KAAK6G,SAAS,CAAEtG,KAAMqG,IAEpBE,KACF9E,IAAO8E,KAA2B7D,MAAK,SAAC8D,EAAU5D,GAC5CA,GACF3C,QAAQC,IACN,sCACAqG,IACA3D,GAGJ,EAAK0D,SAAS,CACZG,gBAAiBD,S,+BAmBvB,OACI,kBAAC,EAAD,CAAMxG,KAAMP,KAAK6C,MAAMtC,W,GAtCPkG,IAAMC,YCKfO,MAPf,WAEE,OACE,kBAAC,EAAD,OCKgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5E,MAAK,SAAA6E,GACjCA,EAAaC,iB,y3BErInBC,EAAOC,QAAU,IAA0B,wD","file":"static/js/main.3ff934bd.chunk.js","sourcesContent":["class NodeDto {\r\n  constructor(name, node) {\r\n    this.name = name;\r\n    this.node = node;\r\n  }\r\n}\r\n\r\n\r\nexport default NodeDto;\r\n","import * as d3 from \"d3\";\r\nimport \"./View.css\";\r\nimport tsvTest from \"./../data/relations_medias_francais.tsv\";\r\nimport React from \"react\";\r\nimport NodeDo from \"./NodeDto\"\r\nimport NodeDto from \"./NodeDto\";\r\nclass View extends React.Component {\r\n  //width\r\n  width = 932;\r\n  //radius\r\n  radius = this.width / 6;\r\n  //dataTest\r\n  dataTest = \"\";\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n  componentWillReceiveProps(nextProps, nextContext) {}\r\n\r\n  async tst() {\r\n    const tsv = await d3.tsv(tsvTest).then((resp, error) => {\r\n      if (error) throw error;\r\n      return resp;\r\n    });\r\n    console.log(\"tsv\", tsv);\r\n    this.constructTree(tsv);\r\n  }\r\n\r\n  constructTree = data => {\r\n    console.log(\"####### debut construct tree\");\r\n    console.log(\"data entry\", data);\r\n    //Step 1 : create a {name: node} map\r\n    var dataMap = [];\r\n    dataMap = data.reduce(function(map, node) {\r\n      map[node.name] = node;\r\n      return map;\r\n    }, {});\r\n    console.log(\"step 1 dataMap get node\", dataMap);\r\n    //Step 2 : get root nodes\r\n    //Step 3 : create the tree array\r\n    var tree = [];\r\n    data.forEach(function(node) {\r\n      // find parent\r\n      var parent = dataMap[node.parent];\r\n      if (parent) {\r\n        // create child array if it doesn't exist\r\n        (parent.children || (parent.children = []))\r\n          // add node to parent's child array\r\n          .push(node);\r\n      } else {\r\n        // parent is null or missing\r\n        tree.push(node);\r\n      }\r\n    });\r\n    console.log(\"step 2 tree\", tree);\r\n    console.log(\"####### fin construct tree\");\r\n\r\n    this.dataTest = this.treeWrapper(tree);\r\n  };\r\n\r\n  getNodeRoots = data => {\r\n    if (!data) throw \"error data is undefined\";\r\n    console.log(data);\r\n    var parentList = [];\r\n    var nameList = [];\r\n\r\n    data.forEach(node => {\r\n      if (node.parent && !parentList.includes(node.parent)) {\r\n        parentList.push(node.parent);\r\n      }\r\n    });\r\n\r\n    data.forEach(node => {\r\n      if (node.name && !nameList.includes(node.name)) {\r\n        nameList.push(node.name);\r\n      }\r\n    });\r\n    var rootsNamesList = parentList.filter(item => {\r\n      return !nameList.includes(item);\r\n    });\r\n    var roots = [];\r\n    console.log(\"rootsNamesList\", rootsNamesList);\r\n    console.log(\"data\", data);\r\n    rootsNamesList.forEach(rootName => {\r\n      var node = data.filter(d => {\r\n        return d.name == rootName;\r\n      })[0];\r\n      //var root = {};\r\n      //root[rootName] =rootFromData;\r\n      console.log(\"rootName : \", rootName, \"node : \", node, \"data : \", data);\r\n      var root = new NodeDto(rootName, node);\r\n      console.log(\"NodeDto created as root\", root);\r\n      roots.push(root);\r\n    });\r\n    console.log(\"roots\", roots);\r\n    return roots;\r\n  };\r\n\r\n  treeWrapper = tree => {\r\n    return { name: \"Media francais\", children: tree };\r\n  };\r\n\r\n  render() {\r\n    //\r\n    this.tst();\r\n    //\r\n    const data = this.props.data;\r\n    if (data) {\r\n      this.drawSunburstChart(data);\r\n    }\r\n    return <div></div>;\r\n  }\r\n\r\n  //https://observablehq.com/d/54d3c0a047426724\r\n  async drawSunburstChart(data) {\r\n    const width = this.width;\r\n    const radius = this.radius;\r\n    const root = this.partition(data);\r\n    var body = d3.select(\"body\");\r\n    root.each(d => (d.current = d));\r\n    var divGlobal = body.append(\"div\");\r\n\r\n    const arc = d3\r\n      .arc()\r\n      .startAngle(d => d.x0)\r\n      .endAngle(d => d.x1)\r\n      .padAngle(d => Math.min((d.x1 - d.x0) / 2, 0.005))\r\n      .padRadius(this.radius * 1.5)\r\n      .innerRadius(d => d.y0 * this.radius)\r\n      .outerRadius(d => Math.max(d.y0 * this.radius, d.y1 * this.radius - 1));\r\n\r\n    const svg = divGlobal\r\n      .append(\"svg\")\r\n      .attr(\"viewBox\", [0, 0, 2000, 2000])\r\n      .style(\"font\", \"10px sans-serif\");\r\n\r\n    const g = svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${width / 2},${width / 2})`);\r\n\r\n    const path = g\r\n      .append(\"g\")\r\n      .selectAll(\"path\")\r\n      .data(root.descendants().slice(1))\r\n      .join(\"path\")\r\n      .attr(\"fill\", d => {\r\n        while (d.depth > 1) d = d.parent;\r\n        return this.color2(d);\r\n      })\r\n      .attr(\"fill-opacity\", d =>\r\n        arcVisible(d.current) ? (d.children ? 0.6 : 0.4) : 0\r\n      )\r\n      .attr(\"d\", d => arc(d.current));\r\n\r\n    path\r\n      .filter(d => d.children)\r\n      .style(\"cursor\", \"pointer\")\r\n      .on(\"click\", clicked);\r\n\r\n    path.append(\"title\").text(\r\n      d =>\r\n        `${d\r\n          .ancestors()\r\n          .map(d => d.data.key)\r\n          .reverse()\r\n          .join(\"/\")}\\n${this.format(d.value)}`\r\n    );\r\n\r\n    const label = g\r\n      .append(\"g\")\r\n      .attr(\"pointer-events\", \"none\")\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .style(\"user-select\", \"none\")\r\n      .selectAll(\"text\")\r\n      .data(root.descendants().slice(1))\r\n      .join(\"text\")\r\n      .attr(\"dy\", \"0.35em\")\r\n      .attr(\"fill-opacity\", d => +labelVisible(d.current))\r\n      .attr(\"transform\", d => labelTransform(d.current))\r\n      .text(d => {\r\n        //let label = d.data.key ? d.data.key : d.data.cible;\r\n        let label = d.data.name;\r\n        if (label && label.length > 10) {\r\n          label = label.slice(0, 10) + \"...\";\r\n        }\r\n        return label;\r\n      });\r\n\r\n    const parent = g\r\n      .append(\"circle\")\r\n      .datum(root)\r\n      .attr(\"r\", radius)\r\n      .attr(\"fill\", \"none\")\r\n      .attr(\"pointer-events\", \"all\")\r\n      .on(\"click\", clicked);\r\n\r\n    function clicked(p) {\r\n      parent.datum(p.parent || root);\r\n\r\n      root.each(\r\n        d =>\r\n          (d.target = {\r\n            x0:\r\n              Math.max(0, Math.min(1, (d.x0 - p.x0) / (p.x1 - p.x0))) *\r\n              2 *\r\n              Math.PI,\r\n            x1:\r\n              Math.max(0, Math.min(1, (d.x1 - p.x0) / (p.x1 - p.x0))) *\r\n              2 *\r\n              Math.PI,\r\n            y0: Math.max(0, d.y0 - p.depth),\r\n            y1: Math.max(0, d.y1 - p.depth)\r\n          })\r\n      );\r\n\r\n      const t = g.transition().duration(750);\r\n\r\n      // Transition the data on all arcs, even the ones that aren’t visible,\r\n      // so that if this transition is interrupted, entering arcs will start\r\n      // the next transition from the desired position.\r\n\r\n      path\r\n        .transition(t)\r\n        .tween(\"data\", d => {\r\n          const i = d3.interpolate(d.current, d.target);\r\n          return t => (d.current = i(t));\r\n        })\r\n        .filter(function(d) {\r\n          return +this.getAttribute(\"fill-opacity\") || arcVisible(d.target);\r\n        })\r\n        .attr(\"fill-opacity\", d =>\r\n          arcVisible(d.target) ? (d.children ? 0.6 : 0.4) : 0\r\n        )\r\n        .attrTween(\"d\", d => () => arc(d.current));\r\n\r\n      label\r\n        .filter(function(d) {\r\n          return +this.getAttribute(\"fill-opacity\") || labelVisible(d.target);\r\n        })\r\n        .transition(t)\r\n        .attr(\"fill-opacity\", d => +labelVisible(d.target))\r\n        .attrTween(\"transform\", d => () => labelTransform(d.current));\r\n    }\r\n\r\n    function arcVisible(d) {\r\n      return d.y1 <= 3 && d.y0 >= 1 && d.x1 > d.x0;\r\n    }\r\n\r\n    function labelVisible(d) {\r\n      return d.y1 <= 3 && d.y0 >= 1 && (d.y1 - d.y0) * (d.x1 - d.x0) > 0.03;\r\n    }\r\n\r\n    function labelTransform(d) {\r\n      const x = (((d.x0 + d.x1) / 2) * 180) / Math.PI;\r\n      const y = ((d.y0 + d.y1) / 2) * radius;\r\n      const transform = `rotate(${x - 90}) translate(${y},0) rotate(${\r\n        x < 180 ? 0 : 180\r\n      })`;\r\n      return transform;\r\n    }\r\n\r\n    return svg.node();\r\n  }\r\n\r\n  color2 = d => {\r\n    switch (d.data.name) {\r\n      case \"Claude Perdriel\":\r\n        return \"blue\";\r\n      case \"Prisa\":\r\n        return \"red\";\r\n      case \"Xavier Niel\":\r\n        return \"orange\";\r\n      case \"AOL\":\r\n        return \"pink\";\r\n      default : return \"green\";\r\n    }\r\n  };\r\n\r\n  //Functions utils\r\n  partition = data => {\r\n    var root = d3\r\n      .hierarchy(this.dataTest)\r\n      .sum(d => d.value)\r\n      .sort((a, b) => b.value - a.value);\r\n    var size = [2 * Math.PI, root.height + 1];\r\n    let partition = d3.partition().size(size)(root);\r\n    return partition;\r\n  };\r\n\r\n  //color\r\n  color = () => {\r\n    d3.scaleOrdinal(\r\n      d3.quantize(d3.interpolateRainbow, this.props.data.children.length + 1)\r\n    );\r\n  };\r\n\r\n  //format\r\n  format = () => d3.format(\",d\");\r\n}\r\n\r\nexport default View;\r\n","import React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport View from \"../View/View\";\r\nimport json3 from \"./../data/data3.json\";\r\nimport json from \"./../data/data.json\";\r\nimport relations_medias_francais from \"./../data/relations_medias_francais.tsv\";\r\nclass Container extends React.Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    //getting the data from file and update the state.\r\n\r\n    if (json3) {\r\n      this.setState({ data: json3});\r\n    }\r\n    if (relations_medias_francais) {\r\n      d3.tsv(relations_medias_francais).then((response, error) => {\r\n        if (error) {\r\n          console.log(\r\n            \"an error was occured while reading \",\r\n            relations_medias_francais,\r\n            error\r\n          );\r\n        }\r\n        this.setState({\r\n          relationMediaFr: response\r\n        });\r\n      });\r\n    }\r\n    /*\r\n        fetch(\"https://worldmap-ocp.s3.us-east-2.amazonaws.com/flare.json\").then(\r\n          response => {\r\n            if (response.status !== 200) {\r\n              console.log(`There was a problem: ${response.status}`);\r\n              return;\r\n            }\r\n            response.json().then(data => {\r\n              console.log(\"response\", data);\r\n              this.setState({ data });\r\n            });\r\n          }\r\n        );*/\r\n  }\r\n  render() {\r\n    return (\r\n        <View data={this.state.data}></View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Container;\r\n","import React from 'react';\nimport './App.css';\nimport Container from './Container/Container'\n\nfunction App() {\n  \n  return (\n    <Container></Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/relations_medias_francais.f8ade238.tsv\";"],"sourceRoot":""}